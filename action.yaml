# Setup MoonBit Action
#   @author: hustcer
#   @created: 2023/11/02 20:50:20
# REF:
#   - https://docs.github.com/cn/actions/creating-actions/about-custom-actions
#   - https://docs.github.com/cn/actions/creating-actions/metadata-syntax-for-github-actions
#   - https://docs.github.com/en/actions/creating-actions/creating-a-composite-action

name: 'Setup MoonBit'
author: 'hustcer'
description: 'A github action to setup MoonBit environment'

branding:
  icon: 'code'
  color: 'purple'

inputs:
  action:
    required: false
    default: 'nothing'
    description: 'Just a Test input, no input required currently.'

runs:
  using: 'composite'
  steps:
    - name: Setup Nu
      uses: hustcer/setup-nu@v3.7
      with:
        version: '0.86.0'

    - name: Setup MoonBit
      shell: nu {0}
      run: |
        const CLI_HOST = 'https://cli.moonbitlang.com'

        const CLI_DOWNLOAD_PATH = {
          Windows: 'windows',
          Ubuntu: 'ubuntu_x86',
          Darwin: 'macos_intel',
        }

        export-env {
          $env.config.color_config.leading_trailing_space_bg = { attr: n }
        }

        # If current host is Windows
        export def windows? [] {
          # Windows / Darwin / Linux
          (sys).host.name == 'Windows'
        }

        # Create a line by repeating the unit with specified times
        def build-line [
          times: int,
          unit: string = '-',
        ] {
          0..<$times | reduce -f '' { |i, acc| $unit + $acc }
        }

        export def hr-line [
          width?: int = 90,
          --color(-c): string = 'g',
          --blank-line(-b),
          --with-arrow(-a),
        ] {
          echo $'(ansi $color)(build-line $width)(if $with_arrow {'>'})(ansi reset)'
          if $blank_line { char nl }
        }

        # Download moonbit binary files to local
        export def 'setup moonbit' [] {
          let MOONBIT_BIN_DIR = [$nu.home-path '.moon'] | path join
          const DEFAULT_BINS = ['moon', 'moonc', 'moonfmt', 'moonrun', 'mooninfo']
          const WINDOWS_BINS = ['moon.exe', 'moonc.exe', 'moonfmt.exe', 'moonrun.exe']
          mkdir $MOONBIT_BIN_DIR; cd $MOONBIT_BIN_DIR
          let DOWNLOAD_PATH = $CLI_DOWNLOAD_PATH | get -i (sys).host.name

          if (windows?) {
            $WINDOWS_BINS | each {|it| aria2c $'($CLI_HOST)/($DOWNLOAD_PATH)/($it)' }
          } else {
            $DEFAULT_BINS | each {|it| aria2c $'($CLI_HOST)/($DOWNLOAD_PATH)/($it)'; chmod +x $it }
          }

          echo (char nl)
          echo $'Contents of ($MOONBIT_BIN_DIR):'; hr-line -b
          echo (ls -l $MOONBIT_BIN_DIR)
          echo $MOONBIT_BIN_DIR  | save -a $env.GITHUB_PATH
        }

        setup moonbit

